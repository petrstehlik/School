Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.


    Report from: Interprocedural optimizations [ipo]

  WHOLE PROGRAM (SAFE) [EITHER METHOD]: false
  WHOLE PROGRAM (SEEN) [TABLE METHOD]: false
  WHOLE PROGRAM (READ) [OBJECT READER METHOD]: false

INLINING OPTION VALUES:
  -inline-factor: 100
  -inline-min-size: 30
  -inline-max-size: 230
  -inline-max-total-size: 2000
  -inline-max-per-routine: 10000
  -inline-max-per-compile: 500000

In the inlining report below:
   "sz" refers to the "size" of the routine. The smaller a routine's size,
      the more likely it is to be inlined.
   "isz" refers to the "inlined size" of the routine. This is the amount
      the calling routine will grow if the called routine is inlined into it.
      The compiler generally limits the amount a routine can grow by having
      routines inlined into it.

Begin optimization report for: particles_simulate(t_particle *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (particles_simulate(t_particle *)) [1/3=33.3%] nbody.cpp(12,1)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at nbody.cpp(17,2)
   remark #25445: Loop Interchange not done due to: Data Dependencies
   remark #25446: Dependencies found between following statements:  [From_Line# -> (Dependency Type) To_Line#]
   remark #25447: Dependence found between following statements:  [24 -> (Anti) 38]
   remark #25447: Dependence found between following statements:  [25 -> (Anti) 39]
   remark #25447: Dependence found between following statements:  [26 -> (Anti) 40]
   remark #25447: Dependence found between following statements:  [33 -> (Flow) 38]
   remark #25447: Dependence found between following statements:  [34 -> (Flow) 39]
   remark #25447: Dependence found between following statements:  [35 -> (Flow) 40]
   remark #25447: Dependence found between following statements:  [38 -> (Anti) 33]
   remark #25447: Dependence found between following statements:  [38 -> (Flow) 24]
   remark #25447: Dependence found between following statements:  [39 -> (Anti) 34]
   remark #25447: Dependence found between following statements:  [39 -> (Flow) 25]
   remark #25447: Dependence found between following statements:  [40 -> (Anti) 35]
   remark #25447: Dependence found between following statements:  [40 -> (Flow) 26]
   remark #25451: Advice: Loop Interchange, if possible, might help loopnest. Suggested Permutation : ( 1 2 ) --> ( 2 1 ) 
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at nbody.cpp(18,3)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at nbody.cpp(21,4)
      <Predicate Optimized v1>
         remark #25423: Condition at line 22 hoisted out of this loop
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed FLOW dependence between p line 33 and p line 33
         remark #15346: vector dependence: assumed ANTI dependence between p line 33 and p line 33
      LOOP END

      LOOP BEGIN at nbody.cpp(21,4)
      <Predicate Optimized v2>
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed FLOW dependence between p line 33 and p line 33
         remark #15346: vector dependence: assumed ANTI dependence between p line 33 and p line 33
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: particles_read(FILE *, t_particle *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (particles_read(FILE *, t_particle *)) [2/3=66.7%] nbody.cpp(47,1)
  -> EXTERN: (50,9) fscanf(FILE *, const char *, ...)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at nbody.cpp(48,5)
   remark #15527: loop was not vectorized: function call to fscanf(FILE *, const char *, ...) cannot be vectorized   [ nbody.cpp(50,9) ]
LOOP END
===========================================================================

Begin optimization report for: particles_write(FILE *, t_particle *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (particles_write(FILE *, t_particle *)) [3/3=100.0%] nbody.cpp(58,1)
  -> EXTERN: (61,9) fprintf(FILE *, const char *, ...)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at nbody.cpp(59,5)
   remark #15527: loop was not vectorized: function call to fprintf(FILE *, const char *, ...) cannot be vectorized   [ nbody.cpp(61,9) ]
LOOP END
===========================================================================
